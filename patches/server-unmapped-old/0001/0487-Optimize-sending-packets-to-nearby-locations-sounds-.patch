From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 23 May 2020 17:03:41 -0400
Subject: [PATCH] Optimize sending packets to nearby locations (sounds/effects)

Instead of using the entire world or player list, use the distance
maps to only iterate players who are even seeing the chunk the packet
is originating from.

This will drastically cut down on packet sending cost for worlds with
lots of players in them.

diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 65e01b98c74d2fa9ff6d6db18f9f8c684b7bdac4..fa9fae3979caaaef16a21d7407bb05e796963d7c 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1153,16 +1153,40 @@ public abstract class PlayerList {
     }
 
     public void sendPacketNearby(@Nullable EntityHuman entityhuman, double d0, double d1, double d2, double d3, ResourceKey<World> resourcekey, Packet<?> packet) {
-        for (int i = 0; i < this.players.size(); ++i) {
-            EntityPlayer entityplayer = (EntityPlayer) this.players.get(i);
+        WorldServer world = null;
+        if (entityhuman != null && entityhuman.world instanceof WorldServer) {
+            world = (WorldServer) entityhuman.world;
+        }
 
-            // CraftBukkit start - Test if player receiving packet can see the source of the packet
-            if (entityhuman != null && entityhuman instanceof EntityPlayer && !entityplayer.getBukkitEntity().canSee(((EntityPlayer) entityhuman).getBukkitEntity())) {
-               continue;
+        // Paper start
+        if (world == null) {
+            world = server.getWorldServer(resourcekey);
+        }
+        PlayerChunkMap chunkMap = world != null ? world.getChunkProvider().playerChunkMap : null;
+        Object[] backingSet;
+        if (chunkMap == null) {
+            // Really shouldn't happen...
+            backingSet = world != null ? world.players.toArray() : players.toArray();
+        } else {
+            com.destroystokyo.paper.util.misc.PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<EntityPlayer> nearbyPlayers = chunkMap.playerViewDistanceBroadcastMap.getObjectsInRange(MCUtil.fastFloor(d0) >> 4, MCUtil.fastFloor(d2) >> 4);
+            if (nearbyPlayers == null) {
+                return;
             }
+            backingSet = nearbyPlayers.getBackingSet();
+        }
+
+        for (Object object : backingSet) {
+            if (!(object instanceof EntityPlayer)) continue;
+            EntityPlayer entityplayer = (EntityPlayer) object;
+            // Paper end
+
+            // CraftBukkit start - Test if player receiving packet can see the source of the packet
+            //if (entityhuman != null && entityhuman instanceof EntityPlayer && !entityplayer.getBukkitEntity().canSee(((EntityPlayer) entityhuman).getBukkitEntity())) { // Paper
+               //continue; // Paper
+            //} // Paper
             // CraftBukkit end
 
-            if (entityplayer != entityhuman && entityplayer.world.getDimensionKey() == resourcekey) {
+            if (entityplayer != entityhuman && entityplayer.world.getDimensionKey() == resourcekey && (!(entityhuman instanceof EntityPlayer) || entityplayer.getBukkitEntity().canSee(((EntityPlayer) entityhuman).getBukkitEntity()))) { // Paper
                 double d4 = d0 - entityplayer.locX();
                 double d5 = d1 - entityplayer.locY();
                 double d6 = d2 - entityplayer.locZ();
