From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Mon, 9 Nov 2020 20:33:38 +0100
Subject: [PATCH] Add ignore discounts API


diff --git a/src/main/java/org/bukkit/inventory/MerchantRecipe.java b/src/main/java/org/bukkit/inventory/MerchantRecipe.java
index abea2a7ae3a2e70faa96038699bbafb494896617..03366a1d84b7037de7af18b057872c65d7a425bf 100644
--- a/src/main/java/org/bukkit/inventory/MerchantRecipe.java
+++ b/src/main/java/org/bukkit/inventory/MerchantRecipe.java
@@ -56,6 +56,7 @@ public class MerchantRecipe implements Recipe {
     private int demand;
     private int villagerExperience;
     private float priceMultiplier;
+    private boolean ignoreDiscounts; // Paper
 
     public MerchantRecipe(@NotNull ItemStack result, int maxUses) {
         this(result, 0, maxUses, false);
@@ -70,6 +71,15 @@ public class MerchantRecipe implements Recipe {
     }
 
     public MerchantRecipe(@NotNull ItemStack result, int uses, int maxUses, boolean experienceReward, int villagerExperience, float priceMultiplier, int demand, int specialPrice) {
+        // Paper start - add ignoreDiscounts param
+        this(result, uses, maxUses, experienceReward, villagerExperience, priceMultiplier, demand, specialPrice, false);
+    }
+    public MerchantRecipe(@NotNull ItemStack result, int uses, int maxUses, boolean experienceReward, int villagerExperience, float priceMultiplier, boolean ignoreDiscounts) {
+        this(result, uses, maxUses, experienceReward, villagerExperience, priceMultiplier, 0, 0, ignoreDiscounts);
+    }
+    public MerchantRecipe(@NotNull ItemStack result, int uses, int maxUses, boolean experienceReward, int villagerExperience, float priceMultiplier, int demand, int specialPrice, boolean ignoreDiscounts) {
+        this.ignoreDiscounts = ignoreDiscounts;
+        // Paper end
         this.result = result;
         this.uses = uses;
         this.maxUses = maxUses;
@@ -282,4 +292,20 @@ public class MerchantRecipe implements Recipe {
     public void setPriceMultiplier(float priceMultiplier) {
         this.priceMultiplier = priceMultiplier;
     }
+
+    // Paper start
+    /**
+     * @return Whether all discounts on this trade should be ignored.
+     */
+    public boolean shouldIgnoreDiscounts() {
+        return ignoreDiscounts;
+    }
+
+    /**
+     * @param ignoreDiscounts Whether all discounts on this trade should be ignored.
+     */
+    public void setIgnoreDiscounts(boolean ignoreDiscounts) {
+        this.ignoreDiscounts = ignoreDiscounts;
+    }
+    // Paper end
 }
