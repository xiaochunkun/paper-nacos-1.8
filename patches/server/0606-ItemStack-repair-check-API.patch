From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 15 May 2021 22:11:11 -0700
Subject: [PATCH] ItemStack repair check API


diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index e71b4d76971a195224b74ffae9b235a1f47b445e..a2b579b5c87294a21b354cb6abcc439b5ca7bcc9 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -576,6 +576,11 @@ public final class CraftMagicNumbers implements UnsafeValues {
         return io.papermc.paper.inventory.ItemRarity.values()[((org.bukkit.craftbukkit.inventory.CraftItemType)itemStack.getType()).getHandle().getRarity(CraftItemStack.asNMSCopy(itemStack)).ordinal()];
     }
 
+    @Override
+    public boolean isValidRepairItemStack(org.bukkit.inventory.ItemStack itemToBeRepaired, org.bukkit.inventory.ItemStack repairMaterial) {
+        return ((org.bukkit.craftbukkit.inventory.CraftItemType) itemToBeRepaired.getType()).getHandle().isValidRepairItem(CraftItemStack.asNMSCopy(itemToBeRepaired), CraftItemStack.asNMSCopy(repairMaterial));
+    }
+
     @Override
     public int getProtocolVersion() {
         return net.minecraft.SharedConstants.getCurrentVersion().getProtocolVersion();
diff --git a/src/test/java/io/papermc/paper/util/ItemStackRepairCheckTest.java b/src/test/java/io/papermc/paper/util/ItemStackRepairCheckTest.java
new file mode 100644
index 0000000000000000000000000000000000000000..3cbdbc8c2ce21d90c8d0b60978d07590a3a76f7f
--- /dev/null
+++ b/src/test/java/io/papermc/paper/util/ItemStackRepairCheckTest.java
@@ -0,0 +1,40 @@
+package io.papermc.paper.util;
+
+import org.bukkit.inventory.ItemStack;
+import org.bukkit.inventory.ItemType;
+import org.bukkit.support.AbstractTestingBase;
+import org.junit.Test;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+public class ItemStackRepairCheckTest extends AbstractTestingBase {
+
+    @Test
+    public void testIsRepairableBy() {
+        ItemStack diamondPick = ItemStack.of(ItemType.DIAMOND_PICKAXE);
+
+        assertTrue("diamond pick isn't repairable by a diamond", diamondPick.isRepairableBy(ItemStack.of(ItemType.DIAMOND)));
+    }
+
+    @Test
+    public void testCanRepair() {
+        ItemStack diamond = ItemStack.of(ItemType.DIAMOND);
+
+        assertTrue("diamond can't repair a diamond axe", diamond.canRepair(ItemStack.of(ItemType.DIAMOND_AXE)));
+    }
+
+    @Test
+    public void testIsNotRepairableBy() {
+        ItemStack notDiamondPick = ItemStack.of(ItemType.ACACIA_SAPLING);
+
+        assertFalse("acacia sapling is repairable by a diamond", notDiamondPick.isRepairableBy(ItemStack.of(ItemType.DIAMOND)));
+    }
+
+    @Test
+    public void testCanNotRepair() {
+        ItemStack diamond = ItemStack.of(ItemType.DIAMOND);
+
+        assertFalse("diamond can repair oak button", diamond.canRepair(ItemStack.of(ItemType.OAK_BUTTON)));
+    }
+}
