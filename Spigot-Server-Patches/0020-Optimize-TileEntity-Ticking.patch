From 38eae291e775cae8925a2d2b580a30f09cecd2d5 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 8 Mar 2015 22:55:25 -0600
Subject: [PATCH] Optimize TileEntity Ticking


diff --git a/src/main/java/net/minecraft/server/TileEntityChest.java b/src/main/java/net/minecraft/server/TileEntityChest.java
index 2b03896e2..c46b761cc 100644
--- a/src/main/java/net/minecraft/server/TileEntityChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityChest.java
@@ -7,7 +7,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
-public class TileEntityChest extends TileEntityLootable implements ITickable {
+public class TileEntityChest extends TileEntityLootable { // Paper - Remove ITickable
 
     private NonNullList<ItemStack> items;
     protected float a;
@@ -113,9 +113,15 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
         int k = this.position.getZ();
 
         ++this.k;
+        // Paper start
+    }
+    private void doOpenLogic() {
         float f;
-
-        if (!this.world.isClientSide && this.f != 0 && (this.k + i + j + k) % 200 == 0) {
+        int i = this.position.getX();
+        int j = this.position.getY();
+        int k = this.position.getZ();
+        if (false && !this.world.isClientSide && this.f != 0 && (this.k + i + j + k) % 200 == 0) { // Paper - disable block
+            // Paper end
             this.f = 0;
             f = 5.0F;
             List<EntityHuman> list = this.world.a(EntityHuman.class, new AxisAlignedBB((double) ((float) i - 5.0F), (double) ((float) j - 5.0F), (double) ((float) k - 5.0F), (double) ((float) (i + 1) + 5.0F), (double) ((float) (j + 1) + 5.0F), (double) ((float) (k + 1) + 5.0F)));
@@ -134,13 +140,17 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
             }
         }
 
-        this.e = this.a;
-        f = 0.1F;
-        if (this.f > 0 && this.a == 0.0F) {
+        if (this.f == 1 && this.a == 0.0F) { // check == 1 instead of > 0, first open
             this.a(SoundEffects.BLOCK_CHEST_OPEN);
         }
+        // Paper start
+    }
+    private void doCloseLogic() {
+        this.e = this.a;
+        // Paper end
 
-        if (this.f == 0 && this.a > 0.0F || this.f > 0 && this.a < 1.0F) {
+        if (this.f == 0/* && this.a > 0.0F || this.f > 0 && this.a < 1.0F*/) { // Paper disable all but player count check
+            /* // Paper disable animation stuff
             float f1 = this.a;
 
             if (this.f > 0) {
@@ -155,9 +165,14 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
 
             float f2 = 0.5F;
 
+
             if (this.a < 0.5F && f1 >= 0.5F) {
-                this.a(SoundEffects.BLOCK_CHEST_CLOSE);
-            }
+            */
+                // add some delay
+                MCUtil.scheduleTask(10, () -> {
+                    if (this.f == 0) this.a(SoundEffects.BLOCK_CHEST_CLOSE);
+                });
+            // } // Paper end
 
             if (this.a < 0.0F) {
                 this.a = 0.0F;
@@ -203,6 +218,7 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
 
             ++this.f;
             if (this.world == null) return; // CraftBukkit
+            doOpenLogic(); // Paper
 
             // CraftBukkit start - Call redstone event
             if (this.getBlock() == Blocks.TRAPPED_CHEST) {
@@ -224,6 +240,7 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
             --this.f;
 
             // CraftBukkit start - Call redstone event
+            doCloseLogic(); // Paper
             if (this.getBlock() == Blocks.TRAPPED_CHEST) {
                 int newPower = Math.max(0, Math.min(15, this.f));
 
diff --git a/src/main/java/net/minecraft/server/TileEntityEnderChest.java b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
index ee19595d3..f2df6f395 100644
--- a/src/main/java/net/minecraft/server/TileEntityEnderChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
@@ -1,6 +1,6 @@
 package net.minecraft.server;
 
-public class TileEntityEnderChest extends TileEntity implements ITickable {
+public class TileEntityEnderChest extends TileEntity { // Paper - Remove ITickable
 
     public float a;
     public float e;
@@ -17,19 +17,37 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
         }
 
         this.e = this.a;
+        // Paper start
+        /*
         int i = this.position.getX();
         int j = this.position.getY();
         int k = this.position.getZ();
         float f = 0.1F;
         double d0;
 
+        */
+        // Paper start
+    }
+    private void doOpenLogic() {
+        int i = this.position.getX();
+        int j = this.position.getY();
+        int k = this.position.getZ();
+        // Paper end
         if (this.f > 0 && this.a == 0.0F) {
             double d1 = (double) i + 0.5D;
 
-            d0 = (double) k + 0.5D;
+            double d0 = (double) k + 0.5D; // Paper
             this.world.a((EntityHuman) null, d1, (double) j + 0.5D, d0, SoundEffects.BLOCK_ENDER_CHEST_OPEN, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
         }
-
+        // Paper start
+    }
+    private void doCloseLogic() {
+        int i = this.position.getX();
+        int j = this.position.getY();
+        int k = this.position.getZ();
+        this.e = this.a;
+        double d0;
+        // Paper end
         if (this.f == 0 && this.a > 0.0F || this.f > 0 && this.a < 1.0F) {
             float f1 = this.a;
 
@@ -76,11 +94,13 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
     public void c() {
         ++this.f;
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.f);
+        doOpenLogic(); // Paper
     }
 
     public void d() {
         --this.f;
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.f);
+        doCloseLogic(); // Paper
     }
 
     public boolean a(EntityHuman entityhuman) {
-- 
2.20.1

