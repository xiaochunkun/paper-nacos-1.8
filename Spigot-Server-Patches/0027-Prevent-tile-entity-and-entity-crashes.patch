From 05fa7c0419cdcd091313c88da05ef233093893f6 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 1 Mar 2016 23:52:34 -0600
Subject: [PATCH] Prevent tile entity and entity crashes


diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 6d4f4e7..f59e6f8 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -174,7 +174,12 @@ public abstract class TileEntity {
             }
         });
         if (this.world != null) {
-            CrashReportSystemDetails.a(crashreportsystemdetails, this.position, this.getBlock(), this.u());
+            // Paper start - Prevent TileEntity and Entity crashes
+            Block block = this.getBlock();
+            if (block != null) {
+                CrashReportSystemDetails.a(crashreportsystemdetails, this.position, block, this.u());
+            }
+            // Paper end
             crashreportsystemdetails.a("Actual block type", new CrashReportCallable() {
                 public String a() throws Exception {
                     int i = Block.getId(TileEntity.this.world.getType(TileEntity.this.position).getBlock());
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 9bfabe0..362df8f 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1441,10 +1441,12 @@ public abstract class World implements IBlockAccess {
                     entity.tickTimer.stopTiming(); // Paper
                 } catch (Throwable throwable1) {
                     entity.tickTimer.stopTiming();
-                    crashreport1 = CrashReport.a(throwable1, "Ticking entity");
-                    crashreportsystemdetails1 = crashreport1.a("Entity being ticked");
-                    entity.appendEntityCrashDetails(crashreportsystemdetails1);
-                    throw new ReportedException(crashreport1);
+                    // Paper start - Prevent tile entity and entity crashes
+                    System.err.println("Entity threw exception at " + entity.world.getWorld().getName() + ":" + entity.locX + "," + entity.locY + "," + entity.locZ);
+                    throwable1.printStackTrace();
+                    entity.dead = true;
+                    continue;
+                    // Paper end
                 }
             }
 
@@ -1506,10 +1508,13 @@ public abstract class World implements IBlockAccess {
                         ((ITickable) tileentity).c();
                         this.methodProfiler.b();
                     } catch (Throwable throwable2) {
-                        crashreport1 = CrashReport.a(throwable2, "Ticking block entity");
-                        crashreportsystemdetails1 = crashreport1.a("Block entity being ticked");
-                        tileentity.a(crashreportsystemdetails1);
-                        throw new ReportedException(crashreport1);
+                        // Paper start - Prevent tile entity and entity crashes
+                        System.err.println("TileEntity threw exception at " + tileentity.world.getWorld().getName() + ":" + tileentity.position.getX() + "," + tileentity.position.getY() + "," + tileentity.position.getZ());
+                        throwable2.printStackTrace();
+                        tilesThisCycle--;
+                        this.tileEntityListTick.remove(tileTickPosition--);
+                        continue;
+                        // Paper end
                     }
                     // Spigot start
                     finally {
-- 
2.8.2

