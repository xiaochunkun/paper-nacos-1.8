From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 28 Jun 2020 19:08:41 -0400
Subject: [PATCH] Improve Legacy Component serialization size

Don't constantly send format: false for all formatting options when parent already
has it false

diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
index bfeea111b6f0d614073c13a3dc4996692f8ad136..00c24bf2fb1df7246d128c5bf33a2c01c4f398c2 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
@@ -45,6 +45,7 @@ public final class CraftChatMessage {
         // Separate pattern with no group 3, new lines are part of previous string
         private static final Pattern INCREMENTAL_PATTERN_KEEP_NEWLINES = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-orx])|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " ]|$))))", Pattern.CASE_INSENSITIVE);
         // ChatColor.b does not explicitly reset, its more of empty
+        private static final ChatModifier EMPTY = ChatModifier.b.setItalic(false); // Paper - OBFHELPER
         private static final ChatModifier RESET = ChatModifier.b.setBold(false).setItalic(false).setUnderline(false).setStrikethrough(false).setRandom(false);
 
         private final List<IChatBaseComponent> list = new ArrayList<IChatBaseComponent>();
@@ -66,6 +67,7 @@ public final class CraftChatMessage {
             Matcher matcher = (keepNewlines ? INCREMENTAL_PATTERN_KEEP_NEWLINES : INCREMENTAL_PATTERN).matcher(message);
             String match = null;
             boolean needsAdd = false;
+            boolean hasReset = false; // Paper
             while (matcher.find()) {
                 int groupId = 0;
                 while ((match = matcher.group(++groupId)) == null) {
@@ -111,7 +113,26 @@ public final class CraftChatMessage {
                             throw new AssertionError("Unexpected message format");
                         }
                     } else { // Color resets formatting
-                        modifier = RESET.setColor(format);
+                        // Paper start - improve legacy formatting
+                        ChatModifier previous = modifier;
+                        modifier = (!hasReset ? RESET : EMPTY).setColor(format);
+                        hasReset = true;
+                        if (previous.isBold()) {
+                            modifier = modifier.setBold(false);
+                        }
+                        if (previous.isItalic()) {
+                            modifier = modifier.setItalic(false);
+                        }
+                        if (previous.isRandom()) {
+                            modifier = modifier.setRandom(false);
+                        }
+                        if (previous.isStrikethrough()) {
+                            modifier = modifier.setStrikethrough(false);
+                        }
+                        if (previous.isUnderlined()) {
+                            modifier = modifier.setUnderline(false);
+                        }
+                        // Paper end
                     }
                     needsAdd = true;
                     break;
