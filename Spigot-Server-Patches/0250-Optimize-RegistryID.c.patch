From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andrew Steinborn <git@steinborn.me>
Date: Mon, 23 Jul 2018 13:08:19 -0400
Subject: [PATCH] Optimize RegistryID.c()

This is a frequent hotspot for world loading/saving.

diff --git a/src/main/java/net/minecraft/server/RegistryID.java b/src/main/java/net/minecraft/server/RegistryID.java
index 6cdd4d46d987132c3c241800b5d59cee2dfa25e2..f9692408a1d177ba4668261070d7610ecfb53a7b 100644
--- a/src/main/java/net/minecraft/server/RegistryID.java
+++ b/src/main/java/net/minecraft/server/RegistryID.java
@@ -14,12 +14,14 @@ public class RegistryID<K> implements Registry<K> {
     private K[] d;
     private int e;
     private int f;
+    private java.util.BitSet usedIds; // Paper
 
     public RegistryID(int i) {
         i = (int) ((float) i / 0.8F);
         this.b = (K[]) (new Object[i]); // Paper - decompile fix
         this.c = new int[i];
         this.d = (K[]) (new Object[i]); // Paper - decompile fix
+        this.usedIds = new java.util.BitSet(); // Paper
     }
 
     public int getId(@Nullable K k0) {
@@ -48,9 +50,14 @@ public class RegistryID<K> implements Registry<K> {
     }
 
     private int c() {
+        // Paper start
+        /*
         while (this.e < this.d.length && this.d[this.e] != null) {
             ++this.e;
         }
+        */
+        this.e = this.usedIds.nextClearBit(0);
+        // Paper end
 
         return this.e;
     }
@@ -64,6 +71,7 @@ public class RegistryID<K> implements Registry<K> {
         this.d = (K[]) (new Object[i]); // Paper - decompile fix
         this.e = 0;
         this.f = 0;
+        this.usedIds.clear(); // Paper
 
         for (int j = 0; j < ak.length; ++j) {
             if (ak[j] != null) {
@@ -89,6 +97,7 @@ public class RegistryID<K> implements Registry<K> {
         this.b[k] = k0;
         this.c[k] = i;
         this.d[i] = k0;
+        this.usedIds.set(i); // Paper
         ++this.f;
         if (i == this.e) {
             ++this.e;
@@ -153,6 +162,7 @@ public class RegistryID<K> implements Registry<K> {
         Arrays.fill(this.d, (Object) null);
         this.e = 0;
         this.f = 0;
+        this.usedIds.clear(); // Paper
     }
 
     public int b() {
